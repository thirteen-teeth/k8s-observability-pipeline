apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: my-collector
spec:
  mode: deployment
  image: otel/opentelemetry-collector-contrib:0.102.0
  config: |
    receivers:
      fluentforward:
        endpoint: 0.0.0.0:24224
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
      prometheus:
        config:
          scrape_configs:
            - job_name: 'federate'
              scrape_interval: 15s
              # needed due to https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/32555
              honor_labels: false
              metrics_path: '/federate'
              params:
                'match[]':
                  - '{job="prometheus"}'
                  - '{__name__="node_memory_Active_bytes"}'
              static_configs:
                - targets:
                  - 'my-monitoring-kube-prometh-prometheus.monitoring:9090'
    processors:
      batch:
        send_batch_size: 100000
        timeout: 5s
      memory_limiter:
        check_interval: 2s
        limit_mib: 1800
        spike_limit_mib: 500
      resourcedetection/system:
        detectors: [ "system" ]
        system:
          hostname_sources: [ "os" ]
      resource:
        attributes:
          - key: ingested.by
            value: "upsertedIngestedValue"
            action: upsert
    exporters:
      clickhouse:
        endpoint: tcp://clickhouse-small-house.olap:9000?dial_timeout=10s&compress=lz4
        username: test
        password: qwerty
        database: otel
        logs_table_name: otel_logs
        traces_table_name: otel_traces
        ttl_days: 3
        timeout: 10s
        sending_queue:
          queue_size: 100
        retry_on_failure:
          enabled: true
          initial_interval: 5s
          max_interval: 30s
          max_elapsed_time: 300s
    extensions:
      health_check:
      pprof:
      zpages:
      memory_ballast:
        size_mib: 1000
    service:
      extensions: [ pprof, zpages, health_check ]
      pipelines:
        logs:
          receivers: [ fluentforward, otlp ]
          processors: [ memory_limiter, resourcedetection/system, resource, batch ]
          exporters: [ clickhouse ]
        traces:
          receivers: [ otlp ]
          processors: [ memory_limiter, resourcedetection/system, resource, batch ]
          exporters: [ clickhouse ]
        metrics:
          receivers: [ prometheus ]
          processors: [ memory_limiter, resourcedetection/system, resource, batch ]
          exporters: [ clickhouse ]